public class Solution {
    public int HeightChecker(int[] heights) {
        int[] sortedHeights = new int[heights.Length];
        heights.CopyTo(sortedHeights,0);
        Array.Sort(sortedHeights);
        int switches = 0;
        for (int i =0; i < heights.Length; i++){
            if (heights[i] != sortedHeights[i]){ 
            switches++;}
        }
        return switches;
    }
}
public class Solution {
    public bool IsLongPressedName(string name, string typed) {
        char[] nameArray = name.ToCharArray();
        char[] typedArray = typed.ToCharArray();
        int nameIndex = 0;
        int typedIndex = 0;
        char previousLetter = nameArray[0];
        bool IsPossible = true;
        while (nameIndex < nameArray.Length){
            char targetLetter = nameArray[nameIndex];
            if(typedIndex >= typedArray.Length){ IsPossible = false; break;}
            if (typedArray[typedIndex] == targetLetter){
                previousLetter = targetLetter;
                nameIndex ++;
                typedIndex++;
            }
            else if (typedArray[typedIndex] == previousLetter){
                typedIndex++;
            }
            else {IsPossible = false; break;}
        }
        return IsPossible;
    }
}